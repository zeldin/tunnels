#include "system.h"

#include "classic/SoundEngine.h"

namespace Tunnels { namespace Classic {

void SoundEngine::stopMusic()
{
  static constexpr byte clearVoices[] {
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  music.play(clearVoices);
}

void SoundEngine::beep()
{
  static constexpr byte beepSound[] {
    0x06, 0xbf, 0xdf, 0xff, 0x80, 0x05, 0x92, 0x0a, 0x01,
    0x9f, 0x00
  };
  music.play(beepSound);
}

void SoundEngine::honk()
{
  static constexpr byte honkSound[] {
    0x06, 0xbf, 0xdf, 0xff, 0x80, 0x20, 0x90, 0x0a, 0x01,
    0x9f, 0x00
  };
  music.play(honkSound);
}

void SoundEngine::playGeneralStoreMusic()
{
  static constexpr byte generalStoreMusic[] {
    0x06, 0xff, 0xdf, 0xbf, 0x8d, 0x38, 0x90, 0x08, 0x02,
    0x86, 0x35, 0x08, 0x02, 0x8d, 0x38, 0x08, 0x02, 0x86,
    0x35, 0x08, 0x05, 0x86, 0x2a, 0xab, 0x1a, 0xb0, 0x08,
    0x02, 0xa5, 0x1c, 0x08, 0x02, 0xac, 0x1f, 0x10, 0x07,
    0x8b, 0x23, 0xab, 0x1a, 0xc3, 0x15, 0xd0, 0x28, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  music.play(generalStoreMusic, true);
}

void SoundEngine::playMonsterSound(unsigned n)
{
  static constexpr byte sound0[] {
    0x01, 0xe3, 0x01, 0x04, 0xc6, 0x01, 0xd4, 0xff,
    0x08, 0x03, 0xc5, 0x01, 0xd2, 0x06, 0x03, 0xc8,
    0x01, 0xd0, 0x04, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound1[] {
    0x01, 0xe3, 0x01, 0x04, 0xc0, 0x3d, 0xd2, 0xff,
    0x04, 0x03, 0xc0, 0x3f, 0xd0, 0x08, 0x03, 0xc0,
    0x38, 0xd4, 0x10, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound2[] {
    0x01, 0xe7, 0x01, 0x04, 0xcc, 0x00, 0xdf, 0xf2,
    0x02, 0x03, 0xcb, 0x00, 0xf1, 0x08, 0x03, 0xcf,
    0x00, 0xf4, 0x20, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound3[] {
    0x01, 0xe3, 0x01, 0x04, 0xc0, 0x0b, 0xdf, 0xf6,
    0x04, 0x03, 0xc0, 0x0a, 0xf2, 0x04, 0x03, 0xc0,
    0x08, 0xf0, 0x10, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound4[] {
    0x01, 0xe3, 0x01, 0x04, 0xc0, 0x04, 0xdf, 0xf2,
    0x08, 0x03, 0xce, 0x03, 0xf1, 0x10, 0x03, 0xc0,
    0x04, 0xf2, 0x10, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound5[] {
    0x01, 0xe7, 0x01, 0x04, 0xc0, 0x30, 0xdf, 0xf0,
    0x18, 0x03, 0xc0, 0x3d, 0xd0, 0x04, 0x02, 0xc0,
    0x3f, 0x04, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound6[] {
    0x01, 0xe3, 0x01, 0x04, 0xc8, 0x06, 0xd2, 0xff,
    0x08, 0x03, 0xc4, 0x06, 0xd1, 0x06, 0x03, 0xc0,
    0x06, 0xd0, 0x04, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound7[] {
    0x01, 0xe3, 0x01, 0x04, 0xc0, 0x3e, 0xd2, 0xff,
    0x08, 0x03, 0xc0, 0x01, 0xdf, 0x02, 0x03, 0xc0,
    0x3f, 0xd0, 0x0c, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound8[] {
    0x01, 0xe7, 0x01, 0x04, 0xc1, 0x00, 0xdf, 0xf1,
    0x10, 0x03, 0xc2, 0x00, 0xf0, 0x0c, 0x02, 0xc3,
    0x00, 0x08, 0x00, // 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound9[] {
    0x01, 0xe7, 0x01, 0x04, 0xcc, 0x0e, 0xdf, 0xf1,
    0x10, 0x03, 0xc0, 0x05, 0xf0, 0x10, 0x03, 0xce,
    0x0e, 0xf2, 0x30, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound10[] {
    0x01, 0xe3, 0x01, 0x04, 0xff, 0xc0, 0x30, 0xd2,
    0x08, 0x02, 0xc0, 0x31, 0x08, 0x04, 0xdf, 0xcf,
    0x2f, 0xf0, 0x10, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound11[] {
    0x01, 0xe7, 0x01, 0x04, 0xc0, 0x02, 0xd4, 0xfc,
    0x04, 0x04, 0xc2, 0x02, 0xd3, 0xff, 0x06, 0x04,
    0xc1, 0x02, 0xd2, 0xf4, 0x0c, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound12[] {
    0x01, 0xe3, 0x01, 0x04, 0xcf, 0x3f, 0xd2, 0xff,
    0x0c, 0x04, 0xc0, 0x0a, 0xdf, 0xf0, 0x04, 0x03,
    0xc0, 0x04, 0xf4, 0x04, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound13[] {
    0x01, 0xe3, 0x01, 0x04, 0xc0, 0x03, 0xdf, 0xf0,
    0x03, 0x02, 0xc0, 0x05, 0x04, 0x04, 0xe7, 0xc0,
    0x14, 0xf5, 0x0c, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound14[] {
    0x01, 0xe3, 0x01, 0x04, 0xc0, 0x0d, 0xdf, 0xf1,
    0x08, 0x03, 0xcc, 0x0c, 0xf0, 0x10, 0x03, 0xc2,
    0x0d, 0xf2, 0x10, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  static constexpr byte sound15[] {
    0x01, 0xe3, 0x01, 0x04, 0xc7, 0x04, 0xd2, 0xff,
    0x06, 0x03, 0xc6, 0x04, 0xd4, 0x0a, 0x03, 0xc4,
    0x04, 0xd6, 0x0c, // 0x00, 0xc9, 0xfc,
    0x04, 0xff, 0xdf, 0xbf, 0x9f, 0x01, 0x01, 0xff, 0x00
  };
  stopMusic();
  switch(n) {
  case 0: music.play(sound0); break;
  case 1: music.play(sound1); break;
  case 2: music.play(sound2); break;
  case 3: music.play(sound3); break;
  case 4: music.play(sound4); break;
  case 5: music.play(sound5); break;
  case 6: music.play(sound6); break;
  case 7: music.play(sound7); break;
  case 8: music.play(sound8); break;
  case 9: music.play(sound9); break;
  case 10: music.play(sound10); break;
  case 11: music.play(sound11); break;
  case 12: music.play(sound12); break;
  case 13: music.play(sound13); break;
  case 14: music.play(sound14); break;
  case 15: music.play(sound15); break;
  }
}


}}
